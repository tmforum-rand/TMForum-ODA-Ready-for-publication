apiVersion: oda.tmforum.org/v1beta3
kind: Component
metadata:
  labels:
    oda.tmforum.org/componentName: '{{.Release.Name}}-{{.Values.component.name}}'
  name: '{{.Release.Name}}-{{.Values.component.name}}'
spec:
  description: Event Management component is a messaging management component that
    is responsible for processing events as they happen from components. Processing
    of record of activities include modelling event messages, syntax validation and
    formatting of event messages and sending/receiving messages between components
    (consumer/producer). Event Management component supports different patterns of
    usage, including Event notification (subscription), Event-sourcing (representational
    state changes) and Event-carried state transfer (including data needed to perform
    further processing). Event Management component should include functionality providing
    a centralised CQRS queryStore for all components that implement event-sourcing
    with event carrier state transfer.
  eventNotification:
    publishedEvents:
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/EventManagement/call-back
      id: TMF688
      implementation: /{{.Release.Name}}-EventManagement
      name: EventManagement
      port: 80
      resources:
      - topicCreateEvent
      - TopicAttributeValueChangeEvent
      - TopicStateChangeEvent
      - TopicDeleteEvent
      - HubCreateEvent
      - HubAttributeValueChangeEvent
      - HubStateChangeEvent
      - HubDeleteEvent
      specification: https://github.com/tmforum-apis/TMF688-EventManagement/blob/master/TMF688-EventManagement-v4.0.0.swagger.json
  functionalBlock: DecouplingAndIntegration
  id: TMFC019
  maintainers:
  - email: components@tmforum.org
    name: Redacted
  name: EventManagement
  owners:
  - email: Redacted
    name: Redacted
  publicationDate: '{{.Values.component.publicationDate}}'
  securityFunction:
    controllerRole: '{{ .Values.security.controllerRole }}'
    exposedAPIs:
    - apiType: openapi
      implementation: '{{.Release.Name}}-partyrole-management-api'
      name: partyrole-management-api
      path: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/partyRoleManagement/v4
      port: 8080
      specification:
      - https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
    secretsManagement:
      podSelector:
        name: '{{ .Values.secretsManagement.podSelector.name }}'
        namespace: '{{ .Values.secretsManagement.podSelector.namespace }}'
        serviceaccount: '{{ .Values.secretsManagement.podSelector.serviceaccount }}'
      sideCar:
        port: 8080
      type: sideCar
  status: specified
  version: 1.1.1
