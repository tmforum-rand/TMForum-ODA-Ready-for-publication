apiVersion: oda.tmforum.org/v1beta3
kind: component
metadata:
  name: components.oda.tmforum.org
spec:
  coreFunction:
    dependentAPIs: []
    exposedAPIs: []
  description: Event Management component is a messaging management component that
    is responsible for processing events as they happen from components. Processing
    of record of activities include modelling event messages, syntax validation and
    formatting of event messages and sending/receiving messages between components
    (consumer/producer). Event Management component supports different patterns of
    usage, including Event notification (subscription), Event-sourcing (representational
    state changes) and Event-carried state transfer (including data needed to perform
    further processing). Event Management component should include functionality providing
    a centralised CQRS queryStore for all components that implement event-sourcing
    with event carrier state transfer.
  eventNotification:
    publishedEvents:
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/EventManagement/call-back
      id: TMF688
      implementation: /{{.Release.Name}}-EventManagement
      name: EventManagement
      port: 80
      resources:
      - topicCreateEvent
      - TopicAttributeValueChangeEvent
      - TopicStateChangeEvent
      - TopicDeleteEvent
      - HubCreateEvent
      - HubAttributeValueChangeEvent
      - HubStateChangeEvent
      - HubDeleteEvent
      specification: https://github.com/tmforum-apis/TMF688-EventManagement/blob/master/TMF688-EventManagement-v4.0.0.swagger.json
    subscribedEvents: []
  functionalBlock: DecouplingAndIntegration
  id: TMFC019
  managementFunction:
    exposedAPIs:
    - apiType: prometheus
      implementation: '{{.Release.Name}}-{{.Values.component.name}}-sm'
      name: metrics
      path: /{{.Release.Name}}-{{.Values.component.name}}/metrics
      port: 4000
  name: EventManagement
  owners:
  - email: koen.peeters@ciminko.lu
    name: Loen Peeters
  publicationDate: 2023-08-18 00:00:00
  securityFunction:
    controllerRole: '{{ .Values.security.controllerRole }}'
    dependentAPIs: []
    exposedAPIs:
    - apiType: openapi
      id: TMF669
      name: party-role-management-api
      port: 8080
      required: true
      resources: []
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
      version: v4.0.0
    secretsManagement:
      podSelector:
        name: '{{ .Values.secretsManagement.podSelector.name }}'
        namespace: '{{ .Values.secretsManagement.podSelector.namespace }}'
        serviceaccount: '{{ .Values.secretsManagement.podSelector.serviceaccount }}'
      sideCar:
        port: 8080
      type: sideCar
  status: specified
  version: 1.1.1
