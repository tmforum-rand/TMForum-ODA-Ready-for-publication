apiVersion: oda.tmforum.org/v1beta3
kind: Component
metadata:
  labels:
    oda.tmforum.org/componentName: '{{.Release.Name}}-{{.Values.component.name}}'
  name: '{{.Release.Name}}-{{.Values.component.name}}'
spec:
  coreFunction:
    dependentAPIs:
    - apiType: openapi
      name: party-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF632_v4.0.0.swagger.json
    - apiType: openapi
      name: party-role-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
    - apiType: openapi
      name: product-inventory-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF637_v4.0.0.swagger.json
    - apiType: openapi
      name: document-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF667_v4.0.0.swagger.json
    exposedAPIs:
    - apiType: openapi
      implementation: '{{.Release.Name}}-agreement-management-api'
      name: agreement-management-api
      path: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/agreementManagement/v4/
      port: 8080
      specification:
      - https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF651_v4.0.0.swagger.json
  description: Agreement Management component is responsible for creating, storing,
    editing, and tracking agreed  arrangements with related terms and conditions over
    a lifecycle. The component manages offers, records acceptance, and associated
    considerations and intentions to establish agreements as legally binding. As well
    this components provides workfows and templates that facilitates collaboration,
    communication and negotiation of agreements between parties, and administers the
    specificities related to translate  agreements into contracts, when it is required.
    It provides a secure storage, version control, compliance management, and renewal
    notifications for agreements.
  eventNotification:
    publishedEvents:
    - apiType: openapi
      id: TMF651
      implementation: /{{.Release.Name}}-agreemngtapi
      name: userRole
      port: 80
      resources:
      - agreementCreateEvent
      - agreementAttributeValueChangeEvent
      - agreementStateChangeEvent
      - agreementSpecificationCreateEvent
      - agreementSpecificationAttributeValueChangeEvent
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF651_AgreementManagement/master/TMF651-AgreementManagement-v4.0.0.swagger.json
    subscribedEvents:
    - apiType: openapi
      id: TMF632
      implementation: /{{.Release.Name}}-PartyManagement
      name: PartyManagement
      port: 80
      resources:
      - individualDeleteEvent
      - organizationDeleteEvent
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF632_PartyManagement/master/TMF632-PartyManagement-v4.0.0.swagger.json
  functionalBlock: Party Management
  id: TMFC039
  maintainers:
  - email: components@tmforum.org
    name: Redacted
  name: AgreementManagement
  owners:
  - email: Redacted
    name: Redacted
  publicationDate: '{{.Values.component.publicationDate}}'
  securityFunction:
    controllerRole: '{{ .Values.security.controllerRole }}'
    exposedAPIs:
    - apiType: openapi
      implementation: '{{.Release.Name}}-partyrole-management-api'
      name: partyrole-management-api
      path: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/partyRoleManagement/v4
      port: 8080
      specification:
      - https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
    secretsManagement:
      podSelector:
        name: '{{ .Values.secretsManagement.podSelector.name }}'
        namespace: '{{ .Values.secretsManagement.podSelector.namespace }}'
        serviceaccount: '{{ .Values.secretsManagement.podSelector.serviceaccount }}'
      sideCar:
        port: 8080
      type: sideCar
  status: specified
  version: 1.1.0
