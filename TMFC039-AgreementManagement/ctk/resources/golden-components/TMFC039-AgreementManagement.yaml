apiVersion: oda.tmforum.org/v1beta3
kind: component
metadata:
  name: components.oda.tmforum.org
spec:
  coreFunction:
    dependentAPIs:
    - apiType: openapi
      id: TMF632
      name: party-management-api
      port: 8080
      required: true
      resources:
      - individual:
        - GET
        - GET/id
      - organization:
        - GET
        - GET/id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF632_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF669
      name: party-role-management-api
      port: 8080
      required: false
      resources:
      - partyRole:
        - GET
        - GET/id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF637
      name: product-inventory-management-api
      port: 8080
      required: false
      resources:
      - product:
        - GET
        - GET/id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF637_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF667
      name: document-management-api
      port: 8080
      required: false
      resources:
      - document:
        - GET
        - GET/id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF667_v4.0.0.swagger.json
      version: v4.0.0
    exposedAPIs:
    - apiType: openapi
      id: TMF651
      name: agreement-management-api
      port: 8080
      required: true
      resources:
      - agreement:
        - GET
        - GET/id
        - POST
        - PATCH/id
        - DELETE/id
      - agreementSpecification:
        - GET
        - GET/id
        - POST
        - PATCH/id
        - DELETE/id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF651_v4.0.0.swagger.json
      version: v4.0.0
  description: Agreement Management component is responsible for creating, storing,
    editing, and tracking agreed  arrangements with related terms and conditions over
    a lifecycle. The component manages offers, records acceptance, and associated
    considerations and intentions to establish agreements as legally binding. As well
    this components provides workfows and templates that facilitates collaboration,
    communication and negotiation of agreements between parties, and administers the
    specificities related to translate  agreements into contracts, when it is required.
    It provides a secure storage, version control, compliance management, and renewal
    notifications for agreements.
  eventNotification:
    publishedEvents:
    - apiType: openapi
      id: TMF651
      implementation: /{{.Release.Name}}-agreemngtapi
      name: userRole
      port: 80
      resources:
      - agreementCreateEvent
      - agreementAttributeValueChangeEvent
      - agreementStateChangeEvent
      - agreementSpecificationCreateEvent
      - agreementSpecificationAttributeValueChangeEvent
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF651_AgreementManagement/master/TMF651-AgreementManagement-v4.0.0.swagger.json
    subscribedEvents:
    - apiType: openapi
      id: TMF632
      implementation: /{{.Release.Name}}-PartyManagement
      name: PartyManagement
      port: 80
      resources:
      - individualDeleteEvent
      - organizationDeleteEvent
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF632_PartyManagement/master/TMF632-PartyManagement-v4.0.0.swagger.json
  functionalBlock: Party Management
  id: TMFC039
  managementFunction:
    exposedAPIs:
    - apiType: prometheus
      implementation: '{{.Release.Name}}-{{.Values.component.name}}-sm'
      name: metrics
      path: /{{.Release.Name}}-{{.Values.component.name}}/metrics
      port: 4000
  name: AgreementManagement
  owners:
  - email: gaetano.biancardi@accenture.com
    name: Gaetano Biancardi
  publicationDate: 2024-08-19 00:00:00
  securityFunction:
    controllerRole: '{{ .Values.security.controllerRole }}'
    dependentAPIs: []
    exposedAPIs:
    - apiType: openapi
      id: TMF669
      name: party-role-management-api
      port: 8080
      required: true
      resources: []
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
      version: v4.0.0
    secretsManagement:
      podSelector:
        name: '{{ .Values.secretsManagement.podSelector.name }}'
        namespace: '{{ .Values.secretsManagement.podSelector.namespace }}'
        serviceaccount: '{{ .Values.secretsManagement.podSelector.serviceaccount }}'
      sideCar:
        port: 8080
      type: sideCar
  status: specified
  version: 1.1.0
