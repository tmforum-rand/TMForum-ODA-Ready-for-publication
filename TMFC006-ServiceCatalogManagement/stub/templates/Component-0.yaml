apiVersion: oda.tmforum.org/v1beta3
kind: Component
metadata:
  labels:
    oda.tmforum.org/componentName: '{{.Release.Name}}-{{.Values.component.name}}'
  name: '{{.Release.Name}}-{{.Values.component.name}}'
spec:
  coreFunction:
    dependentAPIs:
    - apitype: openapi
      name: party-role-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
    - apitype: openapi
      name: party-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF632_v4.0.0.swagger.json
    - apitype: openapi
      name: entity-catalog-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF662_v4.0.0.swagger.json
    - apitype: openapi
      name: user-role-permission-management-api
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF672_v4.0.0.swagger.json
    exposedAPIs:
    - apitype: openapi
      implementation: '{{.Release.Name}}-service-catalog-management-api'
      name: service-catalog-management-api
      path: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/serviceCatalogManagement/v4/
      port: 8080
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF633_v4.0.0.swagger.json
    - apitype: openapi
      implementation: '{{.Release.Name}}-service-quality-management-management-api'
      name: service-quality-management-management-api
      path: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/serviceQualityManagement/v4/
      port: 8080
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF657_v4.0.0.swagger.json
  description: "\tService Catalog Management component is responsible for organizing\
    \ the collection of service specifications that identify and define all requirements\
    \ of a service that can be performed. Service Catalog Management component has\
    \ the functionality that enable present a customer-facing view so users are able\
    \ to search and select services they need, as well as a technical view to enable\
    \ define and setup what's needed to deliver service specifications (Customer Facing\
    \ Service Specifications (CFSSs) and Resource Facing Service Specifications (RFSSs))\
    \ contained in the service catalog. Service Catalog Management component has functionalities\
    \ that include creation of new service specifications, managing service specifications,\
    \ administering the lifecycle of services, describing relationships between service\
    \ specification attributes, reporting on service specification and their changes,\
    \ and facilitating easy and systematic indexing and access to services, as well\
    \ as facilitate automating the service delivery process."
  functionalBlock: Production
  id: TMFC006
  maintainers:
  - email: gaetano.biancardi@accenture.com
    name: Gaetano Biancardi
  name: ServiceCatalogManagement
  owners:
  - email: gaetano.biancardi@accenture.com
    name: Gaetano Biancardi
  publicationDate: '{{.Values.component.publicationDate}}'
  securityFunction:
    controllerRole: '{{ .Values.security.controllerRole }}'
    exposedAPIs:
    - apitype: openapi
      implementation: '{{.Release.Name}}-partyrole-management-api'
      name: partyrole-management-api
      path: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/partyRoleManagement/v4
      port: 8080
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
  status: specified
  version: 1.1.1
