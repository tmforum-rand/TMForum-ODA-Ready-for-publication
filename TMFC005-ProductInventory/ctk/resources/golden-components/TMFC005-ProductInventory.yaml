apiVersion: oda.tmforum.org/v1beta3
kind: component
metadata:
  name: components.oda.tmforum.org
spec:
  coreFunction:
    dependentAPIs:
    - apiType: openapi
      id: TMF669
      name: party-role-management-api
      port: 8080
      required: false
      resources:
      - PartyRoleManagement:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF639
      name: resource-inventory-management-api
      port: 8080
      required: false
      resources:
      - resource:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF639_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF651
      name: agreement-management-api
      port: 8080
      required: false
      resources:
      - agreement:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF651_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF673
      name: geographic-address-management-api
      port: 8080
      required: false
      resources:
      - geographicAddress:
        - GET
        - GET /id
      - geographicSubAddress:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF673_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF674
      name: geographic-site-management-api
      port: 8080
      required: false
      resources:
      - geographicSite:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF674_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF666
      name: account-management-api
      port: 8080
      required: false
      resources:
      - billingAccount:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF666_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF632
      name: party-management-api
      port: 8080
      required: false
      resources:
      - individual:
        - GET
        - GET /id
      - organization:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF632_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF637
      name: product-inventory-management-api
      port: 8080
      required: false
      resources:
      - product:
        - GET
        - GET /id
        - POST
        - PATCH
        - DELETE
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF637_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF638
      name: service-inventory-management-api
      port: 8080
      required: false
      resources:
      - service:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF638_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF622
      name: product-ordering-management-api
      port: 8080
      required: false
      resources:
      - productOrder:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF622_v4.0.0.swagger.json
      version: v4.0.0
    exposedAPIs:
    - apiType: openapi
      id: TMF637
      name: product-inventory-management-api
      port: 8080
      required: true
      resources:
      - product:
        - GET
        - GET /id
        - POST
        - PATCH
        - DELETE
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF637_v4.0.0.swagger.json
      version: v4.0.0
  description: Product  Inventory component is responsible for storage and exposure
    of products that are assigned to and used by Parties. Product Inventory component
    has functionality that enables inventory items creation, inventory organization,
    inventory search or filter, inventory monitoring and tracking, inventory control
    and inventory auditing. The minimum check to be performed at inventory items creation
    or update is the global consistency with related Product Catalog information.
  eventNotification:
    publishedEvents:
    - apiType: openapi
      hub: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/productinventory/hub
      id: TMF637
      implementation: /{{.Release.Name}}-ProductinventoryEvent
      name: Productinventory
      port: 80
      resources:
      - productCreateEvent
      - productAttributeValueChangeEvent
      - productStateChangeEvent
      - productDeleteEvent
      - productBatchEvent
      specification: https://github.com/tmforum-apis/TMF637_ProducInventory/blob/master/TMF637-ProducInventory-v4.0.0.swagger.json
    - apiType: openapi
      hub: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/ProcessFlowManagement/hub
      id: TMF701
      implementation: /{{.Release.Name}}-ProcessFlowManagementEvent
      name: ProcessFlowManagement
      port: 80
      resources:
      - processFlowCreateEvent
      - processFlowStateChangeEvent
      - processFlowStateDeleteEvent
      - processFlowStateAttributeValueChangeEvent
      - taskFlowCreateEvent
      - taskFlowStateChangeEvent
      - taskFlowDeleteEvent
      - taskFlowAttributeValueChangeEvent
      - taskFlowInformationRequiredEvent
      specification: https://github.com/tmforum-apis/TMF701_ProcessFlow/blob/master/TMF701-ProcessFlow-v4.1.0.swagger.json
    subscribedEvents:
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/Resource/call-back
      id: null
      implementation: /{{.Release.Name}}-ResourceInventoryManagement
      name: ResourceInventoryManagement
      port: 80
      resources:
      - resourceDeleteEvent
      specification: https://open-api.tmforum.org20-ResourceInventory-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/ServiceInventory/call-back
      id: null
      implementation: /{{.Release.Name}}-ServiceInventoryManagement
      name: ServiceInventoryManagement
      port: 80
      resources:
      - serviceDeleteEvent
      specification: https://open-api.tmforum.org20-ServiceInventory-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/ProductCatalog/call-back
      id: null
      implementation: /{{.Release.Name}}-ProductCatalogManagement
      name: ProductCatalogManagement
      port: 80
      resources:
      - productSpecificationDeleteEvent
      - productOfferingDeleteEvent
      - productOfferingPriceDeleteEvent
      specification: https://open-api.tmforum.org20-ProductCatalog-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/PartyRole/call-back
      id: null
      implementation: /{{.Release.Name}}-PartyRoleManagement
      name: PartyRoleManagement
      port: 80
      resources:
      - partyRoleDeleteEvent
      specification: https://open-api.tmforum.org20-PartyRole-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/Agreement/call-back
      id: null
      implementation: /{{.Release.Name}}-AgreementManagement
      name: AgreementManagement
      port: 80
      resources:
      - agreementDeleteEvent
      specification: https://open-api.tmforum.org20-Agreement-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/Account/call-back
      id: null
      implementation: /{{.Release.Name}}-AccountManagement
      name: AccountManagement
      port: 80
      resources:
      - billingAccountDeleteEvent
      specification: https://open-api.tmforum.org20-Account-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/UserRolePermission/call-back
      id: null
      implementation: /{{.Release.Name}}-UserRolePermissionManagement
      name: UserRolePermissionManagement
      port: 80
      resources:
      - permissionDeleteEvent
      specification: https://open-api.tmforum.org20-UserRolePermission-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/GeographicSite/call-back
      id: null
      implementation: /{{.Release.Name}}-GeographicSiteManagement
      name: GeographicSiteManagement
      port: 80
      resources:
      - geographicSiteDeleteEvent
      specification: https://open-api.tmforum.org20-GeographicSite-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/GeographicLocation/call-back
      id: null
      implementation: /{{.Release.Name}}-GeographicLocation
      name: GeographicLocation
      port: 80
      resources:
      - geographicLocationDeleteEvent
      specification: https://open-api.tmforum.org20-GeographicLocatin-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/Party/call-back
      id: null
      implementation: /{{.Release.Name}}-PartyManagement
      name: PartyManagement
      port: 80
      resources:
      - individualDeleteEvent
      - organizationDeleteEvent
      specification: https://open-api.tmforum.org20-Party-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/ProductOrdering/call-back
      id: null
      implementation: /{{.Release.Name}}-ProductOrderingManagement
      name: ProductOrderingManagement
      port: 80
      resources:
      - productOrderDeleteEvent
      specification: https://open-api.tmforum.org20-ProductOrdering-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/ProductInventory/call-back
      id: null
      implementation: /{{.Release.Name}}-ProductInventoryManagement
      name: ProductInventoryManagement
      port: 80
      resources:
      - productCreateEvent
      - productDeleteEvent
      - productAttributeValueChangeEvent
      - productStateChangeEvent
      specification: https://open-api.tmforum.org20-ProductInventory-v4.0.0.swagger.json
  functionalBlock: CoreCommerceManagement
  id: TMFC005
  managementFunction:
    exposedAPIs:
    - apiType: prometheus
      implementation: '{{.Release.Name}}-{{.Values.component.name}}-sm'
      name: metrics
      path: /{{.Release.Name}}-{{.Values.component.name}}/metrics
      port: 4000
  name: ProductInventory
  owners:
  - email: gaetano.biancardi@accenture.com
    name: Gaetano Biancardi
  publicationDate: 2024-06-27 00:00:00
  securityFunction:
    controllerRole: '{{ .Values.security.controllerRole }}'
    dependentAPIs: []
    exposedAPIs:
    - apiType: openapi
      id: TMF669
      name: party-role-management-api
      port: 8080
      required: true
      resources: []
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
      version: v4.0.0
    secretsManagement:
      podSelector:
        name: '{{ .Values.secretsManagement.podSelector.name }}'
        namespace: '{{ .Values.secretsManagement.podSelector.namespace }}'
        serviceaccount: '{{ .Values.secretsManagement.podSelector.serviceaccount }}'
      sideCar:
        port: 8080
      type: sideCar
  status: specified
  version: 1.2.0
