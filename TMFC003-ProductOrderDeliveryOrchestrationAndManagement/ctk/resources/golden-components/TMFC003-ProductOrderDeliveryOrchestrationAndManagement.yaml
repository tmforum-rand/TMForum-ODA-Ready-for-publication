apiVersion: oda.tmforum.org/v1beta3
kind: component
metadata:
  name: components.oda.tmforum.org
spec:
  coreFunction:
    dependentAPIs:
    - apiType: openapi
      id: TMF622
      name: product-ordering-management-api
      port: 8080
      required: true
      resources:
      - productOrder:
        - GET /id
        - PATCH
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF622_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF637
      name: product-inventory-management-api
      port: 8080
      required: true
      resources:
      - product:
        - GET
        - GET /id
        - PATCH
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF637_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF633
      name: service-catalog-management-api
      port: 8080
      required: false
      resources:
      - serviceSpecification:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF633_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF638
      name: service-inventory-management-api
      port: 8080
      required: false
      resources:
      - service:
        - GET / id
        - GET
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF638_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF639
      name: resource-inventory-management-api
      port: 8080
      required: false
      resources:
      - resource:
        - GET
        - GET /id
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF639_v4.0.0.swagger.json
      version: v4.0.0
    - apiType: openapi
      id: TMF652
      name: resource-order-management-api
      port: 8080
      required: false
      resources:
      - resourceOrder:
        - GET /id
        - POST
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF652_v4.0.0.swagger.json
      version: v4.0.0
    exposedAPIs: []
  description: 'This component is in charge of the orchestration of the delivery of
    Product Orders (status accepted). Based on the Product specification level of
    information available in the Product Catalog (ex: prerequisite links between product
    specifications, links between product and CFS specifications, ...): it determines
    in which order the product specification level order items need to be delivered,
    and to which CFS (or Resource) specification each ordered product corresponds,
    and prepares and addresses each related service (or resource) order to the production
    system in charge. During the delivery process execution, this component is in
    charge of the evolution of the status of the product specification level order
    items, and of the related product items . So, it triggers the updates of the related
    inventories.'
  eventNotification:
    publishedEvents:
    - apiType: openapi
      hub: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/ProcessFlowManagement/hub
      id: TMF701
      implementation: /{{.Release.Name}}-ProcessFlowManagementEvent
      name: ProcessFlowManagement
      port: 80
      resources:
      - processFlowCreateEvent
      - processFlowStateChangeEvent
      - processFlowStateDeleteEvent
      - processFlowStateAttributeValueChangeEvent
      - taskFlowCreateEvent
      - taskFlowStateChangeEvent
      - taskFlowDeleteEvent
      - taskFlowAttributeValueChangeEvent
      - taskFlowInformationRequiredEvent
      specification: https://github.com/tmforum-apis/TMF701_ProcessFlow/blob/master/TMF701-ProcessFlow-v4.1.0.swagger.json
    subscribedEvents:
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/ProductOrder/call-back
      id: TMF622
      implementation: /{{.Release.Name}}-ProductOrderEvent
      name: ProductOrder
      port: 80
      resources:
      - productOrderStateChangeEvent
      - cancelProductOrderStateChangeEvent
      specification: https://github.com/tmforum-apis/TMF622_ProductOrder/blob/master/TMF622-ProductOrder-v4.0.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/serviceOrderingManagement/call-back
      developerUI: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/serviceOrderingManagement/v4/docs
      id: TMF641
      implementation: /{{.Release.Name}}-serviceOrderingManagementEvent
      name: ServiceOrder
      port: 80
      resources:
      - serviceOrderStateChangeEvent
      - serviceOrderAttributeValueChangeEvent
      - serviceOrderInformationRequiredEvent
      - serviceOrderMilestoneEvent
      - serviceOrderJeopardyEvent
      - cancelServiceOrderStateChangeEvent
      - cancelServiceOrderInformationRequiredEvent
      specification: https://raw.githubusercontent.com/tmforum-apis/TMF641_ServiceOrdering/master/TMF641-ServiceOrdering-v4.1.0.swagger.json
    - apiType: openapi
      call-back: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/ResourceOrder/call-back
      developerUI: /{{.Release.Name}}-{{.Values.component.type}}/tmf-api/ResourceOrder/v4/docs
      id: TMF652
      implementation: /{{.Release.Name}}-ResourceOrder
      name: ResourceOrder
      port: 80
      resources:
      - resourceOrderStateChange
      - resourceOrderAttributeValueChangeEvent
      - resourceOrderInformationRequiredEvent
      - cancelResourceOrderStateChange
      - cancelResourceOrderInformationRequiredEvent
      specification: https://github.com/tmforum-apis/TMF652_ResourceOrderManagement/blob/master/TMF652-ResourceOrder-v4.0.0.swagger.json
  functionalBlock: CoreCommerce
  id: TMFC003
  managementFunction:
    exposedAPIs:
    - apiType: prometheus
      implementation: '{{.Release.Name}}-{{.Values.component.name}}-sm'
      name: metrics
      path: /{{.Release.Name}}-{{.Values.component.name}}/metrics
      port: 4000
  name: ProductOrderDeliveryOrchestrationAndManagement
  owners:
  - email: gaetano.biancardi@accenture.com
    name: Gaetano Biancardi
  publicationDate: 2023-08-18 00:00:00
  securityFunction:
    controllerRole: '{{ .Values.security.controllerRole }}'
    dependentAPIs: []
    exposedAPIs:
    - apiType: openapi
      id: TMF669
      name: party-role-management-api
      port: 8080
      required: true
      resources: []
      specification: https://tmf-open-api-table-documents.s3.eu-west-1.amazonaws.com/ODA/TMF669_v4.0.0.swagger.json
      version: v4.0.0
    secretsManagement:
      podSelector:
        name: '{{ .Values.secretsManagement.podSelector.name }}'
        namespace: '{{ .Values.secretsManagement.podSelector.namespace }}'
        serviceaccount: '{{ .Values.secretsManagement.podSelector.serviceaccount }}'
      sideCar:
        port: 8080
      type: sideCar
  status: specified
  version: 1.1.1
